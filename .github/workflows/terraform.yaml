name: Terraform Job

on: 

  workflow_dispatch:
  
  
  push:
    branches: [main, master]

jobs:
  terraform_scan:
    runs-on: ubuntu-latest

    steps:
      - name: checkout code
        uses: actions/checkout@v4

      - name: tfsec install
        run: |
          curl -s https://raw.githubusercontent.com/aquasecurity/tfsec/master/scripts/install_linux.sh | bash

      - name: run tfsec scan
        run: |
          tfsec . --format json --out iac-scan.json

      - name: fail pipeline if major vulnerabilites are found
        run: |
          if jq -e '.results | map(select(.severity == "HIGH" or .severity == "CRITICAL") | length > 0' iac-scan.terraform > dev/null; then
          echo "Vulnerabilites were found, stopping the pipeline"
          exit 1
          else
          echo "No major issues were found, continuing pipeline"
            exit 0
          fi
        
      - name: upload findings
        if: always()
        uses: actions/upload-artifact@v4
        with: 
          name: scan_results
          path: iac-scan.json

  slack_notification:
    if: always()
    runs-on: ubuntu-latest
    needs: terraform_scan

    steps:
      - name: Slack Notification
        uses: slackapi/slack-github-action@v2.1.0
        with: 
          webhook: ${{ secrets.SLACK_WEBHOOK_URL }}
          webhook-type: incoming-webhook
          payload: |
            {
              "text": "CI/CD Pipeline Notification",

              "blocks": [
                {
                  "type": "section",

                  "fields":[

                    {
                      "type": "mrkdwn",
                      "text": "*Status:*\n${{needs.terraform_scan.result }}"

                    },
                    {
                      "type": "mrkdwn",
                      "text": "*Branch:*\n${{ github.ref_name }}"
                    },
                    {
                      "type": "mrkdwn",
                      "text": "*Triggered by:*\n${{ github.actor }}"
                    }
                  ]

                },

                {
                  "type": "actions",
                  "elements": [

                    {
                      "type": "button",
                      "text": {
                        "type": "plain_text",
                        "text": "view commit"
                      },

                      "url": "${{ github.event.head_commit.url }}"
                    }
                  ]
                }
              ]
            }
  
  
          

            
        
            

          
          

  


    

    



  
     

  
